---
title: Monitoring PAS 
owner: PCF Metrics Platform Monitoring
---

This guide describes how Pivotal Cloud Foundry (PCF) operators can monitor their Pivotal Application Service (PAS) deployments. For information about monitoring Pivotal Container Service (PKS) deployments, see [Logging and Monitoring PKS](https://docs.pivotal.io/runtimes/pks/monitor.html).

For more information about logging and metrics in PCF, see [Overview of Logging and Metrics](../loggregator/data-sources.html).

##<a id="guide"></a> Overview

This guide includes the following topics: 

* <a class="subnav" href="./kpi.html">Key Performance Indicators</a>: A list of Key Performance Indicators (KPIs) that operators may want to monitor with their PAS deployment to help ensure it is in a good operational state.
* <a class="subnav" href="./key-cap-scaling.html">Key Capacity Scaling Indicators</a>: A list of capacity scaling indicators that operators may want to  monitor to determine when they need to scale their PAS deployments.
* <a class="subnav" href="./metrics.html">Selecting and Configuring a Monitoring System</a>: Guidance for setting up PAS with monitoring platforms to continuously monitor component metrics and trigger health alerts.

##<a id="new"></a> KPI Changes from PAS v2.3 to v2.4

This table highlights new and changed KPIs in PAS v2.4.

<table> 
  <tr>
    <td><em>Removed</em></td>
    <td>KPI: <strong><code>gorouter.registry_message.route-emitter<br>route_emitter.HTTPRouteNATSMessagesEmitted</code></strong><br><br>
          These metrics are no longer an accurate representation of routing health. In PAS v2.4 and later, Gorouter skips the TTL for routes that are registered with TLS. This means the routes never expire or get pruned, other than in an attempt to connect to an invalid backend. 
    </td>
    <td>N/A</td>
  </tr>
  <tr>
    <td><em>Modified</em></td>
    <td>KPI: <strong><code>locket.ActiveLocks</code></strong><br><br>
      The Clock Global (Cloud Controller clock) job now also holds a component lock. Therefore the expected number of Active Locks increased to 5. If the Operator disables Zero Downtime App Deployments when configuring PAS, then the expected value will remain 4 for PAS v2.4.
      
    </td>
    <td><a href="./kpi.html#ActiveLocks">Link</a></td>
  </tr> 
    <tr>
    <td><em>New</em></td>
    <td>KPI: <strong><code>doppler_proxy.slow_consumer</code></strong><br><br>
     This metric indicates that a Firehose consumer, such as a monitoring tool nozzle, is ingesting messages from the Firehose too slowly. 
    </td>
    <td><a href="./key-cap-scaling.html#slow-consumer">Link</a></td>
  </tr> 
    <tr>
    <td><em>New</em></td>
    <td>KPI: <strong><code>rlp.dropped, direction: egress</code></strong><br><br>
     This metric indicates that a Reverse Log Proxy (RLP) consumer, such as a monitoring tool nozzle, is ingesting RLP messages too slowly.
    </td>
    <td><a href="./key-cap-scaling.html#rlp-egress-dropped">Link</a></td>
  </tr>
</table> 

##<a id="resources"></a> Monitor PCF Services

For information about KPIs and metrics for PCF services, see the following topics:

* **MySQL for PCF**: [Monitoring MySQL for PCF](https://docs.pivotal.io/p-mysql/monitor.html).
* **Pivotal Cloud Cache**: See [Monitoring Pivotal Cloud Cache](https://docs.pivotal.io/p-cloud-cache/monitoring.html).
* **Redis for PCF**: [Monitoring Redis for PCF](https://docs.pivotal.io/redis/2-0/monitoring.html).
* **RabbitMQ for PCF (pre-provisioned)**: See [Monitoring and KPIs for Pre-Provisioned RabbitMQ for PCF](https://docs.pivotal.io/rabbitmq-cf/monitor-pp.html).
* **RabbitMQ for PCF (on-demand)**: See [Monitoring and KPIs for On-Demand RabbitMQ for PCF](https://docs.pivotal.io/rabbitmq-cf/monitor.html).
